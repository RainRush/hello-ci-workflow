# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
orbs:
  aws-cli: circleci/aws-cli@0.1.8
  aws-ecr: circleci/aws-ecr@1.1.2
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers

    working_directory: ~/hello_world

    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: build docker
          command: |
            docker build -t hello_world .

      - run:
          name: "Start Service and Check That itâ€™s Running"
          command: |
            docker run -d --name hello_world hello_world; sleep 10;
            docker exec hello_world curl --retry 2 --retry-connrefused http://localhost:3000


  deploy:
    docker:
      - image: circleci/python:3.6.1
    environment:
      AWS_DEFAULT_OUTPUT: json
    steps:
      - checkout
      - setup_remote_docker
      # - attach_workspace:
      #     at: workspace
      # - aws-cli/install
      # - aws-cli/configure:
      #     aws-access-key-id: "$AWS_ACCESS_KEY_ID"
      #     aws-region: "$AWS_DEFAULT_REGION"
      - run:
          command: |
            DOCKER_IMAGE='hello_world'

            aws configure set region $AWS_DEFAULT_REGION
            aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
            aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY

            # Tag and push docker image
            docker tag hello_world $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$DOCKER_IMAGE
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$DOCKER_IMAGE

            

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build