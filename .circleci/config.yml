# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.6.3-node-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    steps:
      - checkout
      - setup_remote_docker

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle \
            docker build --tag hello_world .

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # run tests!
      - run:
          name: run server
          command: |
            docker run hello_world; sleep 10 \
              curl --retry 10 --retry-delay 5 -v http://localhost:3000

      # - run:
      #     name: run server
      #     command: |
      #       docker run -d -p 3000:3000 hello_world; sleep 10 \
      #         appropriate/curl --retry 10 --retry-delay 1 --retry-connrefused http://localhost:3000


      # Database setup
      # - run: bundle exec rake db:create
      # - run: bundle exec rake db:schema:load

      # run tests!

      # - run:
      #     name: run tests
          # command: |
          #   mkdir /tmp/test-results
          #   TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | \
          #     circleci tests split --split-by=timings)"

      #       bundle exec rspec \
      #         --format progress \
      #         --format RspecJunitFormatter \
      #         --out /tmp/test-results/rspec.xml \
      #         --format progress \
      #         $TEST_FILES

      # collect reports
      # - store_test_results:
      #     path: /tmp/test-results
      # - store_artifacts:
      #     path: /tmp/test-results
      #     destination: test-results